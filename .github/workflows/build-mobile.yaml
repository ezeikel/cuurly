name: Mobile App Build

on:
  workflow_dispatch:
    inputs:
      platform:
        description: "Build platform"
        required: true
        type: choice
        options:
          - all
          - ios
          - android
      build_profile:
        description: "Build profile"
        required: true
        type: choice
        options:
          - development
          - preview
          - beta
          - production
        default: "preview"

jobs:
  build:
    name: EAS Build
    runs-on: ubuntu-latest
    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v4

      - name: üèó Setup pnpm
        uses: pnpm/action-setup@v2

      - name: üèó Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: üèó Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: üì¶ Install dependencies
        run: pnpm install

      - name: üîç Get Version
        id: version
        working-directory: apps/mobile
        run: |
          chmod +x ./scripts/get-app-version.sh
          VERSION=$(./scripts/get-app-version.sh)
          echo "number=$VERSION" >> $GITHUB_OUTPUT

      - name: üèó Build iOS
        if: ${{ inputs.platform == 'ios' || inputs.platform == 'all' }}
        id: ios_build
        working-directory: apps/mobile
        run: |
          BUILD=$(eas build --platform ios --profile ${{ inputs.build_profile }} --non-interactive --json --wait)
          echo "build_id=$(echo $BUILD | jq -r '.id')" >> $GITHUB_OUTPUT

      - name: üèó Build Android
        if: ${{ inputs.platform == 'android' || inputs.platform == 'all' }}
        id: android_build
        working-directory: apps/mobile
        run: |
          BUILD=$(eas build --platform android --profile ${{ inputs.build_profile }} --non-interactive --json --wait)
          echo "build_id=$(echo $BUILD | jq -r '.id')" >> $GITHUB_OUTPUT

      - name: üîç Get Build Info
        if:
          ${{ inputs.build_profile == 'development' || inputs.build_profile ==
          'preview' }}
        id: build_info
        working-directory: apps/mobile
        run: |
          chmod +x ./scripts/get-build-info.sh
          ./scripts/get-build-info.sh "${{ inputs.platform }}" "${{ steps.ios_build.outputs.build_id }}" "${{ steps.android_build.outputs.build_id }}"

      - name: üì¢ Prepare Slack Message
        id: slack_message
        run: |
          VERSION_TEXT="*Build Profile:* ${{ inputs.build_profile }}\n*Version:* ${{ steps.version.outputs.number }}\n\n"

          if [[ "${{ inputs.build_profile }}" == "beta" ]]; then
            echo "text<<EOF" >> $GITHUB_OUTPUT
            echo "${VERSION_TEXT}Build will be available in:\n‚Ä¢ iOS: TestFlight\n‚Ä¢ Android: Play Store Internal Testing" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          elif [[ "${{ inputs.build_profile }}" == "production" ]]; then
            echo "text<<EOF" >> $GITHUB_OUTPUT
            echo "${VERSION_TEXT}Build will be available in:\n‚Ä¢ iOS: App Store\n‚Ä¢ Android: Play Store" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            if [[ "${{ inputs.platform }}" == "ios" || "${{ inputs.platform }}" == "all" ]]; then
              IOS_TEXT="*iOS Build* (${{ steps.build_info.outputs.ios_build_number }}):\n${{ steps.build_info.outputs.ios_url }}"
            fi
            if [[ "${{ inputs.platform }}" == "android" || "${{ inputs.platform }}" == "all" ]]; then
              ANDROID_TEXT="\n\n*Android Build* (${{ steps.build_info.outputs.android_build_number }}):\n${{ steps.build_info.outputs.android_url }}"
            fi
            echo "text<<EOF" >> $GITHUB_OUTPUT
            echo "${VERSION_TEXT}${IOS_TEXT}${ANDROID_TEXT}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: üì¢ Notify Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "C086PQ89GBC"
          payload: |
            {
              "text": "New Mobile Build(s) Available! üì±",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üì± New Mobile Build(s) Available!"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ steps.slack_message.outputs.text }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
